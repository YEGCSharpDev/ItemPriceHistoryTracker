@page "/"

@inject ItemServices service

<div class="container">

    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Item Id</th>
                    <th>Name</th>
                    <th>Variant</th>
                    <th>Price</th>
                    <th>UnitOfMeaure</th>
                    <th>Quantity</th>
                    <th>Description</th>
                    <th>BillDate</th>
                    <th>LastUpdated</th>
                    <th>Delete Item</th>
                </tr>
            </thead>
            <tbody>
                @if (Items.Any())
                {
                    @foreach (var item in Items)
                    {
                        <tr @onclick="(() => SetItemForUpdate(item))">
                            <td>@item.Id</td>
                            <td>@item.Name</td>
                            <td>@item.Variant</td>
                            <td>@item.Price</td>
                            <td>@item.UnitOfMeaure</td>
                            <td>@item.Quantity</td>
                            <td>@item.Description</td>
                            <td>@item.Created</td>
                            <td>@item.Updated</td>
                            <td><button class="btn btn-danger" @onclick="(() => DeleteItem(item))">Delete</button></td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>No Items available</strong></td></tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row m-5">
        <div class="col-5 bg-light m-2 justify-content-start">

            <div class="p-3 mb-3 bg-primary text-white text-center">Add New Item</div>

            <EditForm Model="@NewItem">
                <div class="form-group">
                    <label for="name">Item Name</label>
                    <input type="text" id="name" class="form-control" @bind-value="@NewItem.Name" />
                </div>
                <div class="form-group">
                    <label for="name">Item Variant</label>
                    <input type="text" id="variant" class="form-control" @bind-value="@NewItem.Variant" />
                </div>

                <div class="form-group">
                    <label for="price">Price</label>
                    <input type="text" id="price" class="form-control" @bind="@NewItem.Price" />
                </div>
                <div class="form-group">
                    <label for="price">Unit Of Measure</label>
                    <input type="text" id="unitofmeasure" class="form-control" @bind="@NewItem.UnitOfMeaure" />
                </div>

                <div class="form-group">
                    <label for="quantity">Quantity</label>
                    <input type="text" id="quantity" class="form-control" @bind="@NewItem.Quantity" />
                </div>

                <div class="form-group">
                    <label for="Description">Description</label>
                    <input type="text" id="Description" class="form-control" @bind="@NewItem.Description" />
                </div>

                <div class="form-group">
                    <label for="BillDate">Bill Date</label>
                    <input type="date" id="BillDate" class="form-control" @bind="@NewItem.Created" />
                </div>


                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="AddNewItem"> Add Item</button>
                </div>
            </EditForm>
        </div>

        <div class="col-5 bg-light m-2 justify-content-end">
            <div class="p-3 mb-1 bg-primary text-white text-center">Update Item</div>

            <EditForm Model="@UpdateItem">
                <div class="form-group">
                    <label for="name">Item Name</label>
                    <input type="text" id="name" class="form-control" @bind-value="@UpdateItem.Name" />
                </div>
                <div class="form-group">
                    <label for="name">Item Variant</label>
                    <input type="text" id="name" class="form-control" @bind-value="@UpdateItem.Variant" />
                </div>
                <div class="form-group">
                    <label for="price">Price</label>
                    <input type="text" id="price" class="form-control" @bind="@UpdateItem.Price" />
                </div>

                <div class="form-group">
                    <label for="price">Unit Of Measure</label>
                    <input type="text" id="unitofmeasurea" class="form-control" @bind="@UpdateItem.UnitOfMeaure" />
                </div>
                <div class="form-group">
                    <label for="quantity">Quantity</label>
                    <input type="text" id="quantity" class="form-control" @bind="@UpdateItem.Quantity" />
                </div>

                <div class="form-group">
                    <label for="Description">Description</label>
                    <input type="text" id="Description" class="form-control" @bind="@UpdateItem.Description" />
                </div>
                <div class="form-group">
                    <label for="BillDate">Bill Date</label>
                    <input type="date" id="BillDate" class="form-control" @bind="@UpdateItem.Created" />
                </div>

                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="UpdateItemData"> Update Item</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    List<Item> Items = new List<Item>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshItems();
    }

    private async Task RefreshItems()
    {
        Items = await service.GetItemsAsync();
    }

    public Item NewItem { get; set; } = new Item();
    private async Task AddNewItem()
    {
        await service.AddItemAsync(NewItem);
        NewItem = new Item();
        await RefreshItems();
    }

    Item UpdateItem = new Item();
    private void SetItemForUpdate(Item item)
    {
        UpdateItem = item;
    }

    private async Task UpdateItemData()
    {
        await service.UpdateItemAsync(UpdateItem);
        await RefreshItems();
    }

    private async Task DeleteItem(Item item)
    {
        await service.DeleteItemAsync(item);
        await RefreshItems();
    }
}
